/**
 * Get matches from an object of nested objects
 *
 * @export
 * @template T Type of matches
 * @param {*} object Parent object to search
 * @param {(x: any) => boolean} pred A predicate function that will receive each property value of an object
 * @param {string[]} excludeKeys Exclude a property if the key exactly matches
 * @returns {T[]} The matched values from the parent object
 */
export declare function getDeepMatches<T>(object: any, pred: (x: any) => boolean, excludeKeys: string[]): T[];
